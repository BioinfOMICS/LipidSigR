% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ROC_plot_all.R
\name{ROC_plot_all}
\alias{ROC_plot_all}
\title{ROC_plot_all}
\usage{
ROC_plot_all(data1, data2, feature_n)
}
\arguments{
\item{data1}{receiver operating characteristic after cross-validation. An output data frame of \code{\link{ML_final}} (list\bold{[[3]]}, cv_ROC_result).}

\item{data2}{mean receiver operating characteristic of cross-validation. An output data frame of \code{\link{ML_final}} (list\bold{[[5]]}, cv_meanROC_result).}

\item{feature_n}{A numeric value specifying the number of features to be shown.}
}
\value{
1 tibble, 1 data frame, and 2 plot.
\enumerate{
\item data2[-c(8,9)]: tibble of ROC values
\item mean_AUC_plot: ROC curve plot
\item ROC_plot_data: ROC data frame of n features
\item ROC_plot: average ROC curve plot of n features
}
}
\description{
The receiver operating characteristic (ROC) curve is one of the common methods to evaluate the diagnostic ability of a binary classifier. Mean AUC and 95% confidence interval for the ROC curve are calculated from all CV runs in each feature number.

This function provides
\enumerate{
\item the overall ROC Curve of CVs with different feature numbers.
\item the ROC Curve of average CVs by user-selected feature numbers.
}
}
\examples{
\donttest{
data("ML_exp_data")
data("ML_lipid_char_table")
data("ML_condition_table")
exp_data <- ML_exp_data
lipid_char_table <- ML_lipid_char_table
condition_table <- ML_condition_table
char_var <- colnames(lipid_char_table)[-1]
ML_data <- ML_data_process(exp_data, group_info = condition_table, lipid_char_table,
                           char_var[1], exclude_var_missing=T, missing_pct_limit=50,
                           replace_zero=T, zero2what='min', xmin=0.5,replace_NA=T,
                           NA2what='min', ymin=0.5, pct_transform=T, data_transform=T,
                           trans_type='log', centering=F, scaling=F)
ML_output <- ML_final(ML_data[[2]], ranking_method='Random_forest', ML_method='Random_forest',
                      split_prop=0.3, nfold=10)
ROC_plot_all(ML_output[[3]], ML_output[[5]], feature_n=10)
}
}
