% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hclustering.R
\name{Hclustering}
\alias{Hclustering}
\title{Hclustering}
\usage{
Hclustering(
  exp_data,
  DE_result_table,
  group_info,
  lipid_char_table = NULL,
  char_var = NULL,
  distfun = "pearson",
  hclustfun = "complete",
  insert_ref_group = NULL,
  ref_group = NULL,
  plotly = TRUE
)
}
\arguments{
\item{exp_data}{A data frame includes the expression of lipid features
in each sample. NAs are allowed. First column should be gene/lipid name and
first column name must be 'feature'.}

\item{DE_result_table}{A data frame comprises the significant results of
differential expression analysis, including fold change, p-value,
adjusted p-value. The output of \code{\link{DE_species_2}}.}

\item{group_info}{A data frame comprises the name of the sample, the label
of the sample, the group name of the sample, and the pair number represents
'the pair' for the t-test/Wilcoxon test. NAs are allowed.}

\item{lipid_char_table}{A data frame. NAs are allowed. The name of first
column must be "feature".A data frame with lipid features, such as class,
total length. NAs are allowed. The name of first column must be "feature".}

\item{char_var}{A character string of the first lipid characteristic
selected by users from the column name of \bold{lipid_char_table},
such as total length.}

\item{distfun}{A character string of the distance measure indicating which
correlation coefficient (or covariance) is to be computed. Allowed methods
include \bold{"pearson"}, \bold{"kendall"}, and
\bold{"spearman"}.(default: "pearson")}

\item{hclustfun}{A character string of the agglomeration method to be used.
This should be (an unambiguous abbreviation of) one of \bold{"ward.D"},
\bold{"ward.D2"}, \bold{"single"}, \bold{"complete"},
\bold{"average"} (= UPGMA), \bold{"mcquitty"} (= WPGMA),
\bold{"median"} (= WPGMC), or
\bold{"centroid"} (= UPGMC). (default: "complete")}

\item{insert_ref_group}{A character string. The name of 'ctrl' after
name conversion.}

\item{ref_group}{A character string. The name of 'exp' after name conversion.}

\item{plotly}{Logical value. If TRUE, return the resulting plots dynamically.}
}
\value{
Return a list with 2 figures and 2 matrices.
\enumerate{
\item all.lipid: a heatmap provides an overview of user-selected
lipid characteristics that illustrates the differences between the
control group and the experimental group.
\item sig.lipid: a heatmap provides significant, user-selected
lipid characteristics that illustrate the differences between the
control group and the experimental group.
\item all.lipid.data: the matrix of the heatmap-\bold{all.lipid}
\item sig.lipid.data: the matrix of the heatmap-\bold{sig.lipid}
}
}
\description{
Hierarchical clustering of lipid species derived from
two groups and  print two heatmaps.
}
\examples{
library(magrittr)
library(dplyr)
data("DE_exp_data")
data("DE_lipid_char_table")
data("DE_group_info")
exp_data <- DE_exp_data
lipid_char_table <- DE_lipid_char_table
group_info <- DE_group_info
exp_transform <- data_process(exp_data, exclude_var_missing=TRUE,
                              missing_pct_limit=50, replace_zero=TRUE,
                              zero2what='min', xmin=0.5, replace_NA=TRUE,
                              NA2what='min', ymin=0.5, pct_transform=TRUE,
                              data_transform=TRUE, trans_type='log',
                              centering=FALSE,  scaling=FALSE)
exp_transform_non_log <- data_process(exp_data, exclude_var_missing=TRUE,
                                      missing_pct_limit=50,
                                      replace_zero=TRUE,
                                      zero2what='min', xmin=0.5,
                                      replace_NA=TRUE, NA2what='min',
                                      ymin=0.5, pct_transform=TRUE,
                                      data_transform=FALSE, trans_type='log',
                                      centering=FALSE, scaling=FALSE)
lipid_char_filter <- lipid_char_table \%>\%
   filter(feature \%in\% exp_transform$feature)
DE_species_table_sig <- DE_species_2(exp_transform_non_log,
                                     data_transform=TRUE,
                                     group_info=group_info, paired=FALSE,
                                     test='t.test',
                                     adjust_p_method='BH',
                                     sig_stat='p.adj',
                                     sig_pvalue=0.05,
                                     sig_FC=2)$DE_species_table_sig
char_var <- colnames(lipid_char_filter)[-1]
Hclustering(exp_transform, DE_result_table=DE_species_table_sig,
            group_info=group_info, lipid_char_table=lipid_char_filter,
            char_var=char_var[1], distfun='pearson',
            hclustfun='complete', plotly=TRUE)
}
